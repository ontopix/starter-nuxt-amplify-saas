version: '3'

tasks:
  # Clean tasks are to reset the working directory to a clean state

  clean.nuxt:
    desc: "Clean Nuxt related files"
    silent: true
    cmds:
      - find . -type d \( -name ".nuxt" -o -name ".playground" -o -name ".output" -o -name "dist" \) -exec rm -rf {} +
  clean.amplify:
    desc: "Clean Amplify related files"
    silent: true
    cmds:
      - find . -type d \( -name ".amplify" \) -exec rm -rf {} +
      - find . -type f \( -name "amplify_outputs*" \) -exec rm -rf {} +
      - find . -type d \( -name "amplifyconfiguration*" \) -exec rm -rf {} +
      - find . -type d \( -name "utils/graphql*" \) -exec rm -rf {} +
  clean.test:
    desc: "Clean test related files"
    silent: true
    cmds:
      - find . -type d \( -name "test-results" \) -exec rm -rf {} +
  clean.logs:
    desc: "Clean logs"
    silent: true
    cmds:
      - find . -type f \( -name "*.log" \) -exec rm -rf {} +
  clean.node:
    desc: "Clean node_modules"
    silent: true
    cmds:
      - find . -type d \( -name "node_modules" \) -exec rm -rf {} +
  clean:
    desc: "Clean the entire project from all temporary files"
    cmds:
      - task: clean.nuxt
      - task: clean.amplify
      - task: clean.test
      - task: clean.logs
      - task: clean.node

  # Amplify tasks to manage the sandbox environment

  amplify.checks:
    desc: "Check the Amplify project"
    preconditions:
      - sh: 'test -n "$AWS_PROFILE"'
        msg: "AWS_PROFILE is not set"
      - sh: 'test -n "$SANDBOX_STACK_NAME"'
        msg: "SANDBOX_STACK_NAME is not set"

  amplify.install:
    desc: "Install the Amplify project node modules"
    cmds:
      - task: clean
      - corepack enable
      - pnpm install

  amplify.sandbox.init:
    desc: "Initialize the Amplify sandbox"
    cmds:
      - task: amplify.checks
      - pnpm backend:sandbox:init

  amplify.sandbox.delete:
    desc: "Delete the Amplify sandbox in AWS"
    cmds:
      - task: amplify.checks
      - pnpm backend:sandbox:delete

  amplify.sandbox.secrets:
    desc: "Set the Amplify sandbox secrets (e.g.: STRIPE_SECRET_KEY, etc.)"
    preconditions:
      - sh: 'test -n "$STRIPE_SECRET_KEY"'
        msg: "STRIPE_SECRET_KEY is not set"
    cmds:
      - task: amplify.checks
      - pnpm backend:sandbox:secrets

  amplify.sandbox.generate:
    desc: "Generate the Amplify project outputs and graphql client code"
    cmds:
      - task: amplify.checks
      - pnpm amplify:sandbox:generate-outputs
      - pnpm amplify:sandbox:generate-graphql-client-code

  amplify.sandbox.seed:
    desc: "Seed the Amplify sandbox"
    cmds:
      - task: amplify.checks
      - pnpm backend:sandbox:seed
      - pnpm backend:sandbox:seed:plans
      - pnpm backend:sandbox:seed:users

  amplify.saas.dev:
    desc: "Start the SaaS development server"
    cmds:
      - task: amplify.checks
      - pnpm saas:dev
